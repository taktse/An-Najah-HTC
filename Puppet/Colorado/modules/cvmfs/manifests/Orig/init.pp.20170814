#cvmfs/manifests/init.pp
# == Class: cvmfs
#
# This module manages cvmfs
#
# == Architecture
# It is made out of two parts:
# cvmfs::install for installation and cert files
# cvmfs::config for the actual configuration
# === Parameters
#
# You should not pass parameters to this class.
# All defaults should be changed using hiera configuration files
#
# [*cvmfs_repositories*] - Defines which vmfs directories are mountable
# [*package_ensure*]     - Specifies if a package is wanted installed or latest. 
#                          Only this two vaules are allowed.
# [*cache_base_dir*]     - The directory that CVMS will install its cache
# [*quota_limit*]        - The cache limit on the node
# [*http_proxy*]         - The host and port of the http_proxy
#             
class cvmfs (
             $cvmfs_repositories,
             $cvmfs_ensure,
             $cvmfs_enable,
             $cvmfs_package,
             $cache_base_dir,
             $quota_limit,
             $http_proxy,
             $config_path,
             $config_template,
             $config_ensure,
             $fuse_config,
             $fuse_config_line,
             $auto_master,
             $auto_master_line,
             $autofs_ensure,
             $autofs_enable,
            )
  {

#
#------------------------------------------------------------------
#
#
    class cvmfs::install {
        package{'cvmfs':
          ensure => "${cvmfs_ensure}",
          name   => "${cvmfs_package}",
        }
    }
  
#
#------------------------------------------------------------------
#
#
    class cvmfs::config  {
       file {'default.local':
          path   => "${config_path}",
          ensure => "${config_ensure}",
          content => template("${config_template}")
       }
    }

#
#------------------------------------------------------------------
#
#
    class fuse {
      
      file{'cvmfs_fuse.conf':
        path   => "${fuse_config}",
        ensure => present,
      }->
      file_line { 'cvmfs_fuse.conf_line':
        path => "${fuse_config}",
        line => "${fuse_config_line}",
      }

      file{'cvmfs_auto.master':
        path   => "${auto_master}",
        ensure =>  present,
      }->
      file_line { 'cvmfs_auto.master_line':
        path => "${auto_master}",
        line => "${auto_master_line}"
      }

      service {'cvmfs_autofs':
        name      => "autofs",
        ensure    => "${autofs_ensure}",
        enable    => "${autofs_enable}",
        subscribe => [
          File['cvmfs_auto.master'],
          File['cvmfs_fuse.conf'],
        ]
      }
    }

  
    Class{'cvmfs::fuse': }
    Class['cvmfs::install'] -> Class['cvmfs::fuse']
    Class['cvmfs::fuse']    -> Class['cvmfs::config']

}


